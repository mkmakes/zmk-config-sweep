// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        one: one {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EXCL>, <&kp KP_N1>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        two: two {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp AT>, <&kp KP_N2>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        three: three {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp POUND>, <&kp KP_N3>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        four: four {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DLLR>, <&kp KP_N4>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        five: five {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PRCNT>, <&kp KP_N5>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        six: six {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp CARET>, <&kp KP_N6>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        seven: seven {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp AMPS>, <&kp KP_N7>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        eight: eight {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp STAR>, <&kp KP_N8>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        nine: nine {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp KP_N9>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        zero: zero {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RPAR>, <&kp KP_N0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ysym: ysym {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp AMPS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mark: mark {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EXCL>, <&kp DLLR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        at: at {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp AT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        and: and {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RPAR>, <&kp AMPS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        prev_tab: prev_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RGUI>
                , <&macro_press &kp RSHIFT>
                , <&macro_tap &kp LBKT>
                , <&macro_release &kp RGUI>
                , <&macro_release &kp RSHIFT>;
        };

        next_tab: next_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RGUI>
                , <&macro_press &kp RSHIFT>
                , <&macro_tap &kp RBKT>
                , <&macro_release &kp RGUI>
                , <&macro_release &kp RSHIFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ENTER    │
            &kp A      &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L      &kp ENTER
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ CTRL     │ ALT      │ GUI      │
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp RCTRL  &kp RALT   &kp RGUI
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                           &lt 1 DEL   &kp LSHIFT     &kp SPACE  &lt 2 BSPC
        //                               ╰───────────┴───────────╯   ╰──────────┴────────────╯
            >;
        };

        left_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  +       │  ! 1     │  @ 2     │  # 3     │  *       │   │  ` &     │  ! $     │  [ {     │  ] }     │  \ |     │
           &kp KP_PLUS &one       &two       &three &kp KP_ASTERISK    &ysym      &mark       &kp LBKT   &kp RBKT   &kp BSLH
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  -       │  $ 4     │  % 5     │  ^ 6     │  /       │   │  - _     │  = +     │  ; :     │  ' "     │          │
      &kp KP_SUBTRACT  &four      &five      &six     &kp KP_SLASH     &kp MINUS  &kp EQUAL  &kp SEMI   &kp SQT    &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  .       │  & 7     │  * 8     │  ( 9     │  ) 0     │   │  ( @     │  ) &     │  , <     │  . >     │  / ?     │
           &kp KP_DOT  &seven     &eight     &nine      &zero          &at        &and       &kp COMMA  &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &kp RGUI   &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        right_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  ESC     │  F1      │  F2      │  F3      │  F4      │   │  PG UP   │  HOME    │  UP      │  END     │  PG DN   │
            &kp ESC    &kp F1     &kp F2     &kp F3     &kp F4         &kp PG_UP  &kp HOME   &kp UARW   &kp END    &kp PG_DN
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  CAPS    │  F5      │  F6      │  F7      │  F8      │   │          │  LEFT    │  DOWN    │  RIGHT   │          │
            &kp CAPS   &kp F5     &kp F6     &kp F7     &kp F8         &prev_tab  &kp LARW   &kp DARW   &kp RARW   &next_tab
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  PLAY    │  PREV    │  NEXT    │  VOLDN   │  VOLUP   │   │          │          │          │          │          │
            &kp C_PP  &kp C_PREV &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &kp RSHIFT  &kp TAB    &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &kp GLOBE      &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴─────────╯
            >;
        };

        tri_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ RESET    │          │          │          │PROFILE 0 │   │          │          │          │          │  RESET   │
           &sys_reset  &trans     &trans     &trans    &bt BT_SEL 0    &trans     &trans     &trans     &trans    &sys_reset
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│          │          │          │PROFILE 1 │   │          │          │          │          │BOOTLOADER│
          &bootloader  &trans     &trans     &trans    &bt BT_SEL 1    &trans     &trans     &trans     &trans    &bootloader
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │ CLEAR BT │PROFILE 2 │   │          │          │          │          │          │
            &trans     &trans     &trans    &bt BT_CLR &bt BT_SEL 2    &trans     &trans     &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};
